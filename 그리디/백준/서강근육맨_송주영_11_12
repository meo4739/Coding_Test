import sys
sys.stdin = open('./그리디/백준/서강.txt')

# 개수를 입력 받고, 종류를 입력 받고, 정렬을 수행한다.
n = int(input())
kind = list(map(int, input().split()))
kind.sort()
space = []

# 홀수면 맨 뒤에 있는 가장 무거운 거는 따로 빼두고 시작한다.
# 가장 가벼운거 가장 무거운거 더하는 모든 조합을 space에 추가하자
if len(kind)%2 != 0:
    space.append(kind[-1])
    kind.pop()

    while kind:
        space.append(kind[0]+kind[-1])
        kind.pop(0)
        kind.pop(-1)

# 짝수면 따로 숫자를 빼는 거 없이 가장 가벼운거 가장 무거운거 조합을 space에 추가하자
else:
    while kind:
        space.append(kind[0]+kind[-1])
        kind.pop(0)
        kind.pop(-1)

# space에 있는 거 중에서 가장 큰 값을 출력한다.
print(max(space)) 
# 실수했던 부분 min을 썼었는데, max를 쓰는 것이 맞다.
# 위의 알고리즘을 따르면 값들을 정렬하고 가능한 한 작은 무게의 조합을 만들게 된다.
# 만약 최종 결과가 3, 6, 3이라고 가정하자.
# 만일, min을 하면 근손실이 3을 넘어가지는 않도록 하자는 말이 되고 근손실 6인 경우가 있기 때문에 말이 맞지 않는다.
# 최대 근손실을 6까지만 허용하자. 6보다는 큰 손실이 발생하지 않도록 하자는 말이 맞고, 그렇기 때문에 max를 써야 한다.